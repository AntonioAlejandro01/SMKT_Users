name: Build Stable Version

on: 
  push:
    tags:
    - '*'

jobs:
  notify-init:
    name: Notify Init Action 
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Send Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: html
          message: |
            üèÅüèÅüèÅ 
            <a href="${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}">${{github.workflow}}</a>
            Repo: ${{github.repository}} 
            Initiated by <a href="${{github.server_url}}/${{github.actor}}">${{github.actor}}</a>.
  sonar:
    name: Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
  docker:
    name: Docker build and push
    needs: [ sonar ]
    runs-on: ubuntu-latest
    steps:
      -
        name: Extract Tag Name 
        uses: olegtarasov/get-tag@v2.1
        id: tagName
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags:  |
            ${{ secrets.DOCKERHUB_USERNAME }}/smkt-users:${{env.GIT_TAG_NAME}}
            ${{ secrets.DOCKERHUB_USERNAME }}/smkt-users:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
    - uses: actions/checkout@v1
    - uses: ncipollo/release-action@v1
      with:
        body: "Stable Releases"
        token: ${{ secrets.GITHUB_TOKEN }}
  notify-failure:
    name: Notify Failure 
    runs-on: ubuntu-latest
    if: ${{ failure() }}
    needs: [ release ]
    steps:
      - name: Extract Tag Name 
        uses: olegtarasov/get-tag@v2.1
        id: tagName
      - name: Send Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: html
          message: |
            üõë üõë üõë
            <a href="${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}">${{github.workflow}}</a> for ${{github.repository}} tag ${{env.GIT_TAG_NAME}} <b>FAILED</b>.
  notify-success:
    name: Notify Success 
    runs-on: ubuntu-latest
    needs: [ release ]
    if: ${{ success() }}
    steps:
      - name: Send Message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          format: html
          message: |
            üÜó üÜó üÜó
            ${{github.workflow}} on ${{github.repo}} tag ${{env.GIT_TAG_NAME}} <b>SUCCESS</b>.